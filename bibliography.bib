@ARTICLE{5396281,
author={D. Nofre},
journal={IEEE Annals of the History of Computing},
title={Unraveling Algol: US, Europe, and the Creation of a Programming Language},
year={2010},
volume={32},
number={2},
pages={58-68},
keywords={ALGOL;history;US;Europe;universal programming language;general translation system;Algol;Europe;Computer languages;History;Natural languages;Skeleton;Writing;Cultural differences;Global communication;Mirrors;Collaboration;history of software;programming languages;universal language;Algol;history of computing},
doi={10.1109/MAHC.2010.4},
ISSN={1058-6180},
month={April},}

@article{turing1936a,
  added-at = {2014-03-17T15:41:01.000+0100},
  annote = {Turing's famous demonstration of the formal limits on computation based on a proof that the {\em halting problem} is undecidable.},
  author = {Turing, Alan M.},
  biburl = {https://www.bibsonomy.org/bibtex/2b51d7b5c67fb98e0117bc176ee5fd5cf/fibso},
  interhash = {8ac1f5e961ff74849ab6f0c7348b9c9c},
  intrahash = {b51d7b5c67fb98e0117bc176ee5fd5cf},
  journal = {Proceedings of the London Mathematical Society},
  keywords = {halting},
  number = 42,
  pages = {230--265},
  timestamp = {2014-03-17T15:41:01.000+0100},
  title = {On Computable Numbers, with an Application to the {E}ntscheidungsproblem},
  url = {https://www.cs.virginia.edu/~robins/Turing_Paper_1936.pdf},
  volume = 2,
  year = 1936
}



@article{Eastman:1982:CEN:358728.358756,
 author = {Eastman, Caroline M.},
 title = {A Comment on English Neologisms and Programming Language Keywords},
 journal = {Commun. ACM},
 issue_date = {Dec 1982},
 volume = {25},
 number = {12},
 month = dec,
 year = {1982},
 issn = {0001-0782},
 pages = {938--940},
 numpages = {3},
 url = {http://doi.acm.org.ezproxy.bcu.ac.uk/10.1145/358728.358756},
 doi = {10.1145/358728.358756},
 acmid = {358756},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {keywords, natural language, neologisms},
}

@INPROCEEDINGS{7026875,
author={A. Kamal and M. N. Monsur and S. T. Jishan and N. Ahmed},
booktitle={8th International Conference on Electrical and Computer Engineering},
title={ChaScript: Breaking language barrier using a bengali programming system},
year={2014},
volume={},
number={},
pages={441-444},
keywords={computer aided instruction;computer science education;programming languages;ChaScript;language barrier;Bengali programming system;computer programming languages;non-English based educational programming system;Bengali speaking people;Computer languages;Programming profession;Computers;Syntactics;Mathematics;Education;Non-English Based Programming Language;Educational Programming Language;ECMAScript;Jison;JavaScript;Learning Programming},
doi={10.1109/ICECE.2014.7026875},
ISSN={},
month={Dec},}

@misc{noauthor_babel_nodate,
	title = {Babel · {The} compiler for next generation {JavaScript}},
	url = {https://babeljs.io},
	abstract = {The compiler for next generation JavaScript},
	urldate = {2018-10-07TZ}
}

@misc{noauthor_hacs_nodate,
	title = {{HaCS} - {Hackathon} and {Computing} {Society} at {BCU}},
	url = {https://hacs.tech/},
	urldate = {2018-10-07TZ}
}

@misc{noauthor_code_nodate,
	title = {Code {First}: {Girls}},
	shorttitle = {Code {First}},
	url = {http://www.codefirstgirls.org.uk/},
	abstract = {Code First: Girls works with companies and women to increase the numbers of women in tech.},
	language = {en},
	urldate = {2018-10-07TZ}
}


@article{Landin:1966:NPL:365230.365257,
 author = {Landin, P. J.},
 title = {The Next 700 Programming Languages},
 journal = {Commun. ACM},
 issue_date = {March 1966},
 volume = {9},
 number = {3},
 month = mar,
 year = {1966},
 issn = {0001-0782},
 pages = {157--166},
 numpages = {10},
 url = {http://doi.acm.org.ezproxy.bcu.ac.uk/10.1145/365230.365257},
 doi = {10.1145/365230.365257},
 acmid = {365257},
 publisher = {ACM},
 address = {New York, NY, USA},
}



@article{Pulido-Prieto,
 author = {Pulido-Prieto, Oscar and Juarez-Martinez, Ulises},
 title = {A Survey of Naturalistic Programming Technologies},
 journal = {ACM Comput. Surv.},
 issue_date = {November 2017},
 volume = {50},
 number = {5},
 month = sep,
 year = {2017},
 issn = {0360-0300},
 pages = {70:1--70:35},
 articleno = {70},
 numpages = {35},
 url = {http://doi.acm.org.ezproxy.bcu.ac.uk/10.1145/3109481},
 doi = {10.1145/3109481},
 acmid = {3109481},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Naturalistic programming, automatic source code generation, controlled natural english, expressiveness},
}

@inproceedings{Lopes:2003:BAT:949344.949400,
 author = {Lopes, Cristina Videira and Dourish, Paul and Lorenz, David H. and Lieberherr, Karl},
 title = {Beyond AOP: Toward Naturalistic Programming},
 booktitle = {Companion of the 18th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '03},
 year = {2003},
 isbn = {1-58113-751-6},
 location = {Anaheim, CA, USA},
 pages = {198--207},
 numpages = {10},
 url = {http://doi.acm.org.ezproxy.bcu.ac.uk/10.1145/949344.949400},
 doi = {10.1145/949344.949400},
 acmid = {949400},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {aspect-oriented programming, cognitive foundations of programming, language design, natural language},
}

@article{murphy,
author={Murphy,Gail and Schwanninger,Christa},
year={2006},
month={Jan},
title={Aspect-Oriented Programming},
journal={IEEE Software},
volume={23},
number={1},
pages={20-23},
note={Copyright - Copyright IEEE Computer Society Jan/Feb 2006; Document feature - references; photographs; illustrations; Last updated - 2013-05-01; CODEN - IESOEG},
abstract={You can measure a software system's value by its modularity. The more modular the system, the easier it is to produce and extend. Aspect-oriented programming technologies aim to improve system modularity by modularizing crosscutting concerns. Global properties and programming and design issues can lead to crosscutting concerns--for example, error handling or transaction code, interacting features, and reliability and security. The guest editors introduce aspect-oriented programming and describe this special issue's articles, which explain the use of aspect-oriented programming to simplify enterprise and system software, the need to expand an interface's meaning in the presence of aspects, and the application of aspects to design and requirements activities. PUBLICATION ABSTRACT]},
keywords={Computers--Software; Software; Modularity; Computer programming; Interfaces},
isbn={07407459},
language={English},
url={https://search-proquest-com.ezproxy.bcu.ac.uk/docview/215842786?accountid=10749},
}

@misc{stackoverflow, title={Stack Overflow Developer Survey 2018}, url={https://insights.stackoverflow.com/survey/2018/}, journal={Stack Overflow}}

@inproceedings{Knoll:2006:PFS:1176617.1176628,
 author = {Kn\"{o}ll, Roman and Mezini, Mira},
 title = {Pegasus: First Steps Toward a Naturalistic Programming Language},
 booktitle = {Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications},
 series = {OOPSLA '06},
 year = {2006},
 isbn = {1-59593-491-X},
 location = {Portland, Oregon, USA},
 pages = {542--559},
 numpages = {18},
 url = {http://doi.acm.org.ezproxy.bcu.ac.uk/10.1145/1176617.1176628},
 doi = {10.1145/1176617.1176628},
 acmid = {1176628},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {aspect-oriented programming, cognitive foundations of programming, language design, natural language programming, naturalistic programming, philosophical foundations of programming},
}

@inproceedings{mefteh2012ara_pegasus,
  title={Ara\_Pegasus: A new framework for programming using the Arabic natural language},
  author={Mefteh, Mariem and Kn{\"o}ll, Roman},
  year={2012}
}

@misc{mallet_g._2010, title={Walking a Mile in Their Shoes: Non-Native English Speakers' Difficulties in English Language Mathematics Classrooms.}, url={https://eric.ed.gov/?id=EJ940646}, journal={Journal of Research in Education}, publisher={Eastern Educational Research Association. George Watson, Marshall University, One John Marshall Drive, College of Education and Professional Development, Huntington, WV 25755. e-mail: eerajournal@gmail.com; Web site: http://www.eeraorganization.org}, author={Mallet and G., Dann}, year={2010}, month={Nov}}

@phdthesis{bretag2002developing,
  title={Developing classroom practices to support NESB students in information systems courses: Some preliminary findings},
  author={Bretag, Tracey and Horrocks, Sam and Smith, Jeff},
  year={2002},
  school={Shannon Research Press}
}

@article{KOORSSE2015162,
title = "Programming assistance tools to support the learning of IT programming in South African secondary schools",
journal = "Computers & Education",
volume = "82",
pages = "162 - 178",
year = "2015",
issn = "0360-1315",
doi = "https://doi.org/10.1016/j.compedu.2014.11.020",
url = "http://www.sciencedirect.com/science/article/pii/S0360131514002735",
author = "Melisa Koorsse and Charmain Cilliers and André Calitz",
keywords = "Programming and programming languages, Interactive learning environments, Secondary education, Evaluation of CAL systems",
abstract = "Novice programmers struggle to understand introductory programming concepts and this difficulty, associated with learning to program, contributes mainly to the lack of interest in the field of Computer Science at tertiary level. Programming assistance tools have been used to assist novice programmers extensively at education institutions. A programming assistance tool (PAT) is a software program that can be used by novice programmers to learn how to program and/or improve their understanding of programming concepts. This research proposes that novice programmers, specifically Information Technology (IT) scholars in South African secondary schools, could be supported by PATs. The main objective of this research was to determine whether the use of a PAT impacted IT scholars' understanding of programming concepts and their motivation towards programming in general. Criteria for the selection of PATs were derived from the programming difficulties identified in literature and from surveys to IT teachers and scholars. The selection criteria were grouped into programming knowledge and programming skills categories. Existing PATs were evaluated using the selection criteria and three PATs, namely, RoboMind, Scratch and B#, were selected for evaluation in this research study. A convenience sample of schools participated in the study. The three PATs provided different approaches while being able to support the Delphi programming language used in schools that participated in the study. The findings of this research indicated that, although scholars perceived the PATs to be useful in the explanation of certain of the programming concepts, there was no conclusive evidence that IT scholars who used a PAT had a significantly better understanding of programming concepts and motivation towards programming than scholars who did not use a PAT. Participant feedback was used to identify the strengths and shortcomings of the three PATs and to provide recommendations for the development of future PATs specifically designed to support IT scholars."
}

 @misc{robomind, title={RoboMind}, url={http://robomind.net/}, journal={RoboMind}}

@article{resnick2005networked,
  title={A networked, media-rich programming environment to enhance technological fluency at after-school centers in economically-disadvantaged communities},
  author={Resnick, Mitchel and Kafai, Yasmin and Maeda, John},
  year={2005}
}

@article{koorsse2015programming,
  title={Programming assistance tools to support the learning of IT programming in South African secondary schools},
  author={Koorsse, Melisa and Cilliers, Charmain and Calitz, Andr{\'e}},
  journal={Computers \& Education},
  volume={82},
  pages={162--178},
  year={2015},
  publisher={Elsevier}
}
